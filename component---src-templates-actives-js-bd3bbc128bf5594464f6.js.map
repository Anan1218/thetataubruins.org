{"version":3,"file":"component---src-templates-actives-js-bd3bbc128bf5594464f6.js","mappings":"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","sources":["webpack://uclathetatau/./src/components/Content.js","webpack://uclathetatau/./src/components/Features.js","webpack://uclathetatau/./src/components/PreviewCompatibleImage.js","webpack://uclathetatau/./src/components/FullWidthImageSmall.js","webpack://uclathetatau/./src/templates/actives.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n);\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n);\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n};\n\nHTMLContent.propTypes = Content.propTypes;\n\nexport default Content;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PreviewCompatibleImage from \"../components/PreviewCompatibleImage\";\nimport \"./styles.css\";\n\nconst FeatureGrid = ({ gridItems }) => (\n  <div className=\"columns is-multiline grid-columns\" \n  style = {{\n    width: \"100%\",\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n  }}>\n    {gridItems.map((item) => (\n      <div key={item.text} className=\"column is-3\">\n        <section className=\"section\" style={{\n          \n        }}>\n          <div>\n            <div\n              style={{\n                width: \"100%\",\n                justifyContent: \"center\",\n                display: \"grid\",\n              }}\n            >\n              <PreviewCompatibleImage imageInfo={item}/>\n            </div>\n          </div>\n          <div style = {{\n            textAlign: \"center\",\n          }}>\n            <p style={{\n              fontWeight: \"bold\",\n              marginTop: \"5px\",\n              fontSize: \"1.2rem\",\n            }}>{item.text}</p>\n            <p>{item.major}</p>\n            <p>{item.year}</p>\n          </div>\n        </section>\n      </div>\n    ))}\n  </div>\n);\n\nFeatureGrid.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      text: PropTypes.string,\n      major: PropTypes.string,\n      year: PropTypes.string,\n    })\n  ),\n};\n\nexport default FeatureGrid;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst PreviewCompatibleImage = ({ imageInfo }) => {\n  const imageStyle = { borderRadius: \"5px\" };\n\n  const { alt = \"\", childImageSharp, image } = imageInfo;\n\n  if (!!image && !!image.childImageSharp) {\n    return (\n      <GatsbyImage\n        image={image.childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n  } else if (!!childImageSharp) {\n    return (\n      <GatsbyImage\n        image={childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n    // for Netlify CMS \n  } else if (image) {\n    return <img style={{imageStyle}} src={image} alt={alt} />;\n  } else {\n    return null\n  }\n};\n\nPreviewCompatibleImage.propTypes = {\n  imageInfo: PropTypes.shape({\n    alt: PropTypes.string,\n    childImageSharp: PropTypes.object,\n    image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    style: PropTypes.object,\n  }).isRequired,\n};\n\nexport default PreviewCompatibleImage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport \"./styles.css\";\n\nexport default function FullWidthImageSmall(props) {\n  const {\n    height = \"100vh\",\n    img,\n    title,\n    subheading,\n    imgPosition = \"center\",\n  } = props;\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"margin-top-0\"\n        style={{\n          display: \"grid\",\n          alignItems: \"center\",\n          backgroundColor: \"#40140f\",\n          zIndex: -1,\n          // backgroundColor: \"black\",\n        }}\n      >\n        {img?.url ? (\n          <img\n            src={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              height: height,\n              width: \"100%\",\n            }}\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        ) : (\n          <GatsbyImage\n            image={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              maxHeight: height,\n              minHeight: \"100vh\",\n              opacity: 0.5,\n            }}\n            layout=\"fullWidth\"\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        )}\n        {(title || subheading) && (\n          <div\n            style={{\n              // By using the same grid area for both, they are stacked on top of each other\n              paddingTop: \"10vmax\",\n              // paddingBottom: \"10vmax\",\n              gridArea: \"1/1\",\n              position: \"relative\",\n              // This centers the other elements inside the hero component\n              placeItems: \"center\",\n              display: \"grid\",\n            }}\n          >\n            {/* Any content here will be centered in the component */}\n            {title && (\n              <h1\n                className=\"has-text-weight-bold homefont\"\n                style={{\n                  // boxShadow:\n                    // \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n                  // backgroundColor: \"rgb(255, 68, 0)\",\n                  color: \"white\",\n                  borderColor: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25em\",\n                  // fontSize: \"3.5rem\",\n                }}\n              >\n                {title}\n              </h1>\n            )}\n            {subheading && (\n              <h3\n                className=\"is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n                style={{\n                  // boxShadow:\n                  //   \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n                  // backgroundColor: \"rgb(255, 68, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25rem\",\n                  marginTop: \"0.5rem\",\n                  textAlign: \"center\",\n                  marginBottom: \"3.3vmax\",\n                }}\n              >\n                {subheading}\n              </h3>\n            )}\n          </div>          \n        )}\n        \n      </div>\n    </React.Fragment>\n  );\n}\n\nFullWidthImageSmall.propTypes = {\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  height: PropTypes.number,\n  subheading: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Content, { HTMLContent } from \"../components/Content\";\nimport Features from \"../components/Features\";\n\nimport { getImage } from \"gatsby-plugin-image\";\n\nimport FullWidthImageSmall from \"../components/FullWidthImageSmall\";\n\n// eslint-disable-next-line\nexport const ActivesPageTemplate = ({\n  image,\n  title,\n  heading,\n  subheading,\n  mainpitch,\n  description,\n  classes,\n}) => {\n  const heroImage = getImage(image) || image;\n\n  return (\n    <div>\n      <FullWidthImageSmall img={heroImage} title={title} subheading={subheading} />\n\n      <p className = \"classHeader\" style={{\n        marginTop: \"40px\",\n      }}>Eta Class</p>\n      <Features gridItems={classes.eta} />\n\n      <p className = \"classHeader\">Lambda Class</p>\n      <Features gridItems={classes.lambda} />\n\n      <p className = \"classHeader\">Mu Class</p>\n      <Features gridItems={classes.mu} />\n      \n      <p className = \"classHeader\">Nu Class</p>\n      <Features gridItems={classes.nu} />\n\n      <p className = \"classHeader\">Xi Class</p>\n      <Features gridItems={classes.xi} />\n\n      <p className = \"classHeader\">Omicron Class</p>\n      <Features gridItems={classes.omicron} />\n\n      <p className = \"classHeader\">Pi Class</p>\n      <Features gridItems={classes.pi} />\n    </div>\n  );\n};\n\nActivesPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  subheading: PropTypes.string,\n  mainpitch: PropTypes.object,\n  description: PropTypes.string,\n  classes: PropTypes.shape({\n    eta: PropTypes.array,\n    lambda: PropTypes.array,\n    mu: PropTypes.array,\n    nu: PropTypes.array,\n    xi: PropTypes.array,\n    omicron: PropTypes.array,\n    pi: PropTypes.array,\n  }),\n};\n\nconst ActivesPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <ActivesPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        subheading={frontmatter.subheading}\n        mainpitch={frontmatter.mainpitch}\n        description={frontmatter.description}\n        classes={frontmatter.classes}\n      />\n    </Layout>\n  );\n};\n\nActivesPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n};\n\nexport default ActivesPage;\nexport const ActivesPageQuery = graphql`\n  query ActivesPage($id: String!) {\n    markdownRemark(id: { eq: $id} frontmatter: { templateKey: { eq: \"actives\" } }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\n          }\n        }\n        heading\n        subheading\n        \n        classes {\n          eta {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            text\n            major\n            year\n          }\n          lambda {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            text\n            major\n            year\n          }\n          mu {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            text\n            major\n            year\n          }\n          nu {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            text\n            major\n            year\n          }\n          xi {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            text\n            major\n            year\n          }\n          omicron {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            text\n            major\n            year\n          }\n          pi {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            text\n            major\n            year\n          }\n\n        }\n      }\n    }\n  }\n`;\n"],"names":["HTMLContent","content","className","dangerouslySetInnerHTML","__html","gridItems","style","width","maxWidth","margin","map","item","key","text","justifyContent","display","imageInfo","textAlign","fontWeight","marginTop","fontSize","major","year","imageStyle","borderRadius","alt","childImageSharp","image","G","gatsbyImageData","src","FullWidthImageSmall","props","height","img","title","subheading","imgPosition","alignItems","backgroundColor","zIndex","url","objectFit","objectPosition","gridArea","aspectratio","formats","maxHeight","minHeight","opacity","layout","paddingTop","position","placeItems","color","borderColor","lineHeight","padding","marginBottom","ActivesPageTemplate","heading","classes","mainpitch","description","heroImage","getImage","Features","eta","lambda","mu","nu","xi","omicron","pi","frontmatter","data","markdownRemark","Layout"],"sourceRoot":""}